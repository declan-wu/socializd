--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.10
-- Dumped by pg_dump version 9.5.10

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: options; Type: TABLE; Schema: public; Owner: labber
--

CREATE TABLE options (
    id integer NOT NULL,
    poll_id integer NOT NULL,
    name text NOT NULL
);


ALTER TABLE options OWNER TO labber;

--
-- Name: options_id_seq; Type: SEQUENCE; Schema: public; Owner: labber
--

CREATE SEQUENCE options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE options_id_seq OWNER TO labber;

--
-- Name: options_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: labber
--

ALTER SEQUENCE options_id_seq OWNED BY options.id;


--
-- Name: polls; Type: TABLE; Schema: public; Owner: labber
--

CREATE TABLE polls (
    id integer NOT NULL,
    admin_id integer NOT NULL,
    created_date date NOT NULL,
    title text NOT NULL
);


ALTER TABLE polls OWNER TO labber;

--
-- Name: polls_id_seq; Type: SEQUENCE; Schema: public; Owner: labber
--

CREATE SEQUENCE polls_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE polls_id_seq OWNER TO labber;

--
-- Name: polls_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: labber
--

ALTER SEQUENCE polls_id_seq OWNED BY polls.id;


--
-- Name: rankings; Type: TABLE; Schema: public; Owner: labber
--

CREATE TABLE rankings (
    voter_id integer NOT NULL,
    poll_id integer NOT NULL,
    option_id integer NOT NULL,
    relative_points numeric NOT NULL
);


ALTER TABLE rankings OWNER TO labber;

--
-- Name: users; Type: TABLE; Schema: public; Owner: labber
--

CREATE TABLE users (
    id integer NOT NULL,
    poll_id integer NOT NULL,
    email text NOT NULL
);


ALTER TABLE users OWNER TO labber;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: labber
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE users_id_seq OWNER TO labber;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: labber
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: voters; Type: TABLE; Schema: public; Owner: labber
--

CREATE TABLE voters (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    email character varying(255) NOT NULL
);


ALTER TABLE voters OWNER TO labber;

--
-- Name: voters_id_seq; Type: SEQUENCE; Schema: public; Owner: labber
--

CREATE SEQUENCE voters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE voters_id_seq OWNER TO labber;

--
-- Name: voters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: labber
--

ALTER SEQUENCE voters_id_seq OWNED BY voters.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: labber
--

ALTER TABLE ONLY options ALTER COLUMN id SET DEFAULT nextval('options_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: labber
--

ALTER TABLE ONLY polls ALTER COLUMN id SET DEFAULT nextval('polls_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: labber
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: labber
--

ALTER TABLE ONLY voters ALTER COLUMN id SET DEFAULT nextval('voters_id_seq'::regclass);


--
-- Data for Name: options; Type: TABLE DATA; Schema: public; Owner: labber
--

COPY options (id, poll_id, name) FROM stdin;
1	1	avengers
2	1	harry potter
3	1	star wars
4	1	lord of the ring
5	1	fast and furious
6	2	sleep
7	2	eat
8	2	go die rn
9	5	goodlife
10	5	hone
11	5	adfaf
12	5	dfas
13	5	adfaf
14	7	goodlife
15	7	hone
16	7	whatever
17	7	ok
\.


--
-- Name: options_id_seq; Type: SEQUENCE SET; Schema: public; Owner: labber
--

SELECT pg_catalog.setval('options_id_seq', 17, true);


--
-- Data for Name: polls; Type: TABLE DATA; Schema: public; Owner: labber
--

COPY polls (id, admin_id, created_date, title) FROM stdin;
1	1	2019-04-26	which movie do you want to watch?
2	1	2019-08-26	sleep or eat?
5	1	2019-08-26	gym
7	1	2019-08-26	gym
\.


--
-- Name: polls_id_seq; Type: SEQUENCE SET; Schema: public; Owner: labber
--

SELECT pg_catalog.setval('polls_id_seq', 8, true);


--
-- Data for Name: rankings; Type: TABLE DATA; Schema: public; Owner: labber
--

COPY rankings (voter_id, poll_id, option_id, relative_points) FROM stdin;
1	1	1	1
1	1	2	3
1	1	3	2
1	1	4	4
1	1	5	5
2	1	1	3
2	1	2	2
2	1	3	1
2	1	4	4
2	1	5	5
3	1	1	4
3	1	2	2
3	1	3	3
3	1	4	5
3	1	5	1
4	1	1	1
4	1	2	3
4	1	3	2
4	1	4	5
4	1	5	4
5	1	1	3
5	1	2	1
5	1	3	2
5	1	4	5
5	1	5	4
6	2	7	0.3333333333333333
6	2	6	0.6666666666666666
6	2	8	1
7	2	6	0.3333333333333333
7	2	7	0.6666666666666666
7	2	8	1
13	5	9	0.2
13	5	12	0.4
13	5	11	0.6
13	5	10	0.8
13	5	13	1
14	7	15	0.25
14	7	14	0.5
14	7	17	0.75
14	7	16	1
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: labber
--

COPY users (id, poll_id, email) FROM stdin;
1	1	Alice
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: labber
--

SELECT pg_catalog.setval('users_id_seq', 1, true);


--
-- Data for Name: voters; Type: TABLE DATA; Schema: public; Owner: labber
--

COPY voters (id, name, email) FROM stdin;
1	Daniel	daniel123@gmail.com
2	Bob	bob2123@gmail.com
3	Andrew	andrew281@gmail.com
4	Declan	declan32491@gmail.com
5	Annie	annie2191@gmail.com
6	dummyVoter	@
7	dummyVoter	@
8	dummyVoter	@
9	dummyVoter	@
10	dummyVoter	@
11	dummyVoter	@
12	dummyVoter	@
13	dummyVoter	@
14	dummyVoter	@
\.


--
-- Name: voters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: labber
--

SELECT pg_catalog.setval('voters_id_seq', 14, true);


--
-- Name: options_pkey; Type: CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY options
    ADD CONSTRAINT options_pkey PRIMARY KEY (id);


--
-- Name: polls_pkey; Type: CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY polls
    ADD CONSTRAINT polls_pkey PRIMARY KEY (id);


--
-- Name: rankings_pkey; Type: CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY rankings
    ADD CONSTRAINT rankings_pkey PRIMARY KEY (voter_id, poll_id, option_id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: voters_pkey; Type: CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY voters
    ADD CONSTRAINT voters_pkey PRIMARY KEY (id);


--
-- Name: options_poll_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY options
    ADD CONSTRAINT options_poll_id_fkey FOREIGN KEY (poll_id) REFERENCES polls(id) ON DELETE CASCADE;


--
-- Name: polls_admin_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY polls
    ADD CONSTRAINT polls_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES users(id) ON DELETE CASCADE;


--
-- Name: rankings_option_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY rankings
    ADD CONSTRAINT rankings_option_id_fkey FOREIGN KEY (option_id) REFERENCES options(id) ON DELETE CASCADE;


--
-- Name: rankings_poll_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY rankings
    ADD CONSTRAINT rankings_poll_id_fkey FOREIGN KEY (poll_id) REFERENCES polls(id) ON DELETE CASCADE;


--
-- Name: rankings_voter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: labber
--

ALTER TABLE ONLY rankings
    ADD CONSTRAINT rankings_voter_id_fkey FOREIGN KEY (voter_id) REFERENCES voters(id) ON DELETE CASCADE;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

